<!DOCTYPE html>
<html lang="pl" data-theme="jasny">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no, viewport-fit=cover">
  <title>Dziennik Rozwoju 🌱</title>
  <meta name="description" content="Aplikacja do śledzenia codziennego rozwoju i nawyków.">
  
  <!-- Meta Tagi dla Aplikacji Mobilnej -->
  <meta name="theme-color" content="#FFFFFF">
  <link rel="manifest" href="../manifest.json">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="default">
  <meta name="apple-mobile-web-app-title" content="Dziennik">
  <link rel="apple-touch-icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><rect width=%22100%22 height=%22100%22 rx=%2222%22 fill=%22%234A7C59%22/><text x=%2250%25%22 y=%2250%25%22 dominant-baseline=%22central%22 text-anchor=%22middle%22 font-size=%2280%22>🌱</text></svg>">
  <meta name="mobile-web-app-capable" content="yes">
  <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>🎯</text></svg>">

  <!-- Fonts & Scripts -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&family=Lora:ital,wght@0,400..700;1,400..1000&family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap&subset=latin-ext" rel="stylesheet">
  
  <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.2/dist/chart.umd.min.js" defer></script>
  <script src="https://cdn.jsdelivr.net/npm/date-fns@3.6.0/cdn.min.js" defer></script>

  <style>
    :root {
      --font-primary: 'Inter', sans-serif;
      --font-secondary: 'Lora', serif;
      --font-ui: 'Nunito', sans-serif;
      --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
      --transition-fast: 200ms var(--ease-in-out);
      --transition-medium: 300ms var(--ease-in-out);
    }

    /* Motywy */
    [data-theme="fokus"]  { --bg-primary:#18181B; --bg-secondary:#27272A; --bg-tertiary:#3F3F46; --text-primary:#F4F4F5; --text-secondary:#A1A1AA; --text-tertiary:#71717A; --accent-primary:#FBBF24; --accent-secondary:#34D399; --accent-info:#60A5FA; --border-primary:#3F3F46; --shadow-color:rgba(0,0,0,0.2); }
    [data-theme="jasny"]  { --bg-primary:#F9F9F9; --bg-secondary:#FFFFFF; --bg-tertiary:#F0F0F0; --text-primary:#1A1A1A; --text-secondary:#5C5C5C; --text-tertiary:#8A8A8A; --accent-primary:#3B82F6; --accent-secondary:#10B981; --accent-info:#6366F1; --border-primary:#E5E7EB; --shadow-color:rgba(0,0,0,0.05); }
    [data-theme="ciemny"] { --bg-primary:#121212; --bg-secondary:#1E1E1E; --bg-tertiary:#2A2A2A; --text-primary:#EAEAEA; --text-secondary:#A0A0A0; --text-tertiary:#707070; --accent-primary:#60A5FA; --accent-secondary:#34D399; --accent-info:#818CF8; --border-primary:#3A3A3A; --shadow-color:rgba(0,0,0,0.2); }
    [data-theme="las"]    { --bg-primary:#F4F6F0; --bg-secondary:#FFFFFF; --bg-tertiary:#E9EFE4; --text-primary:#2A332B; --text-secondary:#556B55; --text-tertiary:#879888; --accent-primary:#4A7C59; --accent-secondary:#82A374; --accent-info:#3B82F6; --border-primary:#D8E0D3; --shadow-color:rgba(42,51,43,0.05); }
    [data-theme="ocean"]  { --bg-primary:#F0F7FA; --bg-secondary:#FFFFFF; --bg-tertiary:#E6F1F5; --text-primary:#1E3A4B; --text-secondary:#4A6572; --text-tertiary:#8B9DA5; --accent-primary:#3498DB; --accent-secondary:#5DADE2; --accent-info:#60A5FA; --border-primary:#D4E3E9; --shadow-color:rgba(30,58,75,0.05); }
    [data-theme="blask"]  { --bg-primary:#FFFBF5; --bg-secondary:#FFFFFF; --bg-tertiary:#FCEFE0; --text-primary:#4A2E0A; --text-secondary:#8C6D46; --text-tertiary:#B5A087; --accent-primary:#E88C32; --accent-secondary:#F2B950; --accent-info:#3B82F6; --border-primary:#F5E5D3; --shadow-color:rgba(74,46,10,0.05); }

    *, *::before, *::after { box-sizing: border-box; margin: 0; padding: 0; }
    html { height: 100%; }
    body { background: var(--bg-primary); color: var(--text-primary); font-family: var(--font-ui); line-height: 1.6; min-height: 100%; -webkit-font-smoothing: antialiased; }
    #main-app { display: flex; flex-direction: column; min-height: 100vh; }
    .container { max-width: 980px; width: 100%; margin: 0 auto; padding: 1.25rem 1rem; display: flex; flex-direction: column; flex: 1 1 auto; }

    /* Tytuł strony */
    .page-title-header { text-align: center; margin-bottom: 1rem; padding: 3rem 1.5rem; border-radius: 16px; color: white; background-image: linear-gradient(rgba(0,0,0,0.3), rgba(0,0,0,0.5)), url('https://images.pexels.com/photos/1274260/pexels-photo-1274260.jpeg'); background-size: cover; background-position: center; }
    .page-title-header h1 { font-family: var(--font-secondary); font-size: 2.25rem; font-weight: 700; text-shadow: 1px 1px 3px rgba(0,0,0,0.5); }
    .header-subtitle { font-size: .95rem; color: rgba(255,255,255,0.9); margin-top: .1rem; text-shadow: 1px 1px 3px rgba(0,0,0,0.5); }
    .quote { font-family: var(--font-secondary); font-style: italic; font-size: .9rem; color: rgba(255,255,255,0.8); margin-top: .75rem; padding: 0 1rem; }

    /* Pasek aplikacji */
    .app-header { display: flex; align-items: center; justify-content: space-between; gap: 1rem; padding: .75rem 0; border-bottom: 1px solid var(--border-primary); margin-bottom: 1.25rem; position: relative; flex-wrap: wrap; }

    /* Nawigacja — pigułki */
    .header-nav-pills {
      display: flex; align-items: center; gap: 4px;
      background: var(--bg-secondary); padding: 6px; border-radius: 999px; border: 1px solid var(--border-primary);
    }
    .nav-pill-item {
      display: flex; align-items: center; justify-content: center;
      width: 42px; height: 42px; color: var(--text-tertiary);
      border-radius: 50%; transition: all .2s ease; text-decoration: none;
    }
    .nav-pill-item:hover { color: var(--text-primary); background: var(--bg-tertiary); }
    .nav-pill-item.active { background: var(--bg-tertiary); color: var(--accent-primary); box-shadow: 0 0 0 2px var(--accent-primary); }

    /* Kontrolki daty */
    .header-date-controls { display: flex; flex-direction: column; align-items: center; gap: .75rem; flex: 1 1 260px; min-width: 240px; }
    .date-nav { display: flex; align-items: center; gap: .5rem; }
    .header-date-controls input[type="date"] {
      font-family: var(--font-secondary); font-weight: 600; font-size: 1rem; text-align: center;
      background: transparent; border: none; color: var(--text-primary); padding: .4rem .5rem; border-radius: 6px; width: 160px;
    }
    .header-date-controls input[type="date"]:hover { background: var(--bg-tertiary); }
    .header-date-controls input[type="date"]::-webkit-calendar-picker-indicator { filter: invert(.7); cursor: pointer; }

    /* Akcje po prawej */
    .header-actions { display: flex; align-items: center; gap: .5rem; }

    /* Przyciski */
    .btn { display: inline-flex; align-items: center; justify-content: center; gap: .5rem; font-family: var(--font-ui); font-weight: 700; border: none; border-radius: 10px; padding: .65rem 1rem; cursor: pointer; transition: all var(--transition-fast); font-size: .95rem; }
    .btn-primary { background: var(--accent-primary); color: var(--bg-primary); }
    .btn-primary:hover { opacity: .95; transform: translateY(-1px); }
    .btn-tertiary { background: var(--bg-secondary); color: var(--text-secondary); border: 1px solid var(--border-primary); }
    .btn-tertiary:hover { background: var(--bg-tertiary); color: var(--text-primary); }

    /* Zakładki (Tabs) */
    .tabs-container { border-bottom: 1px solid var(--border-primary); margin-bottom: 1rem; }
    .tabs { display: flex; gap: 1rem; }
    .tab { padding: .5rem 1rem; cursor: pointer; border-bottom: 2px solid transparent; color: var(--text-tertiary); font-weight: 600; transition: all var(--transition-fast); }
    .tab:hover { color: var(--text-primary); }
    .tab.active { color: var(--accent-primary); border-bottom-color: var(--accent-primary); }
    
    /* Karty i sekcje */
    .content-card { background: var(--bg-secondary); border: 1px solid var(--border-primary); border-radius: 12px; padding: 1.25rem; box-shadow: 0 4px 12px var(--shadow-color); }
    .content-card:not(:last-child) { margin-bottom: 1rem; }
    .content-header { font-family: var(--font-primary); font-size: 1.2rem; font-weight: 700; margin-bottom: 1rem; display: flex; align-items: center; gap: .5rem; }
    .section { display: none; }
    .section.active { display: block; }

    /* Formularze */
    .form-group { margin-bottom: 1rem; }
    .form-group label { display: block; font-weight: 700; color: var(--text-secondary); margin-bottom: .5rem; font-size: .95rem; }
    textarea, input[type="text"], input[type="date"] {
      width: 100%; background: var(--bg-tertiary); border: 1px solid var(--border-primary); border-radius: 8px; padding: .75rem; color: var(--text-primary); font-family: var(--font-ui);
    }
    textarea { min-height: 120px; }

    /* Modale */
    .modal { display: none; position: fixed; inset: 0; background: rgba(0,0,0,0.7); z-index: 1000; }
    .modal.active { display: flex; align-items: center; justify-content: center; }
    .modal .modal-content { width: 92%; max-width: 640px; max-height: 90vh; overflow: hidden; display: flex; flex-direction: column; }
    .modal-header { display: flex; align-items: center; justify-content: space-between; gap: .5rem; padding-bottom: .75rem; border-bottom: 1px solid var(--border-primary); margin-bottom: .75rem; }
    .modal-title { margin: 0; }
    .modal-body-content { overflow-y: auto; padding-right: .25rem; }
    .close-modal-btn { background: none; border: none; font-size: 1.25rem; color: var(--text-tertiary); cursor: pointer; }

    /* Selector motywów */
    .theme-selector { display: grid; grid-template-columns: repeat(auto-fit, minmax(130px, 1fr)); gap: .75rem; }
    .theme-option { padding: 1rem; border-radius: 10px; border: 2px solid var(--border-primary); text-align: center; cursor: pointer; transition: all var(--transition-fast); background: var(--bg-secondary); }
    .theme-option:hover { border-color: var(--accent-primary); }
    .theme-option.is-active { border-color: var(--accent-primary); box-shadow: 0 0 0 3px color-mix(in srgb, var(--accent-primary) 20%, transparent); font-weight: 800; }
    .theme-option span { font-size: 1.5rem; display: block; margin-bottom: .25rem; }

    /* Toast */
    #notification { position: fixed; bottom: 18px; left: 50%; transform: translate(-50%, 200%); background: var(--text-primary); color: var(--bg-primary); padding: .8rem 1.1rem; border-radius: 10px; box-shadow: 0 10px 18px rgba(0,0,0,0.2); transition: transform var(--transition-medium); z-index: 1500; }
    #notification.active { transform: translate(-50%, 0); }

    @media (max-width: 768px) {
      .container { padding: 1rem; }
      .page-title-header h1 { font-size: 1.9rem; }
      .header-actions { width: 100%; justify-content: center; }
    }
  </style>
</head>
<body>
  <div id="main-app">
    <div class="container">

      <header class="page-title-header">
        <h1>Dziennik Rozwoju</h1>
        <p class="header-subtitle">Codzienna refleksja to klucz do postępu</p>
        <p class="quote" id="dailyQuote"></p>
      </header>

      <header class="app-header">
        <!-- Nawigacja -->
        <nav class="header-nav-pills" aria-label="Nawigacja">
          <a href="/" class="nav-pill-item" title="Strona Główna" aria-label="Strona Główna">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16"><path d="M6.5 14.5v-3.505c0-.245.25-.495.5-.495h2c.25 0 .5.25.5.495v3.505A.5.5 0 0 0 10 15h2a.5.5 0 0 0 .5-.5V8.207l-5-5L2 8.207V14.5a.5.5 0 0 0 .5.5H5a.5.5 0 0 0 .5-.5z"/></svg>
          </a>
          <a href="/DZIENNIK/public/" class="nav-pill-item active" title="Dziennik" aria-label="Dziennik">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16"><path d="M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z"/><path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z"/></svg>
          </a>
          <a href="/CELE/" class="nav-pill-item" title="Cele" aria-label="Cele">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16"><path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/><path d="M8 4a4 4 0 1 1 0 8 4 4 0 0 1 0-8zm0 1a3 3 0 1 0 0 6 3 3 0 0 0 0-6z"/><path d="M8 6a2 2 0 1 1 0 4 2 2 0 0 1 0-4zm0 1a1 1 0 1 0 0 2 1 1 0 0 0 0-2z"/></svg>
          </a>
          <a href="/WIZJA/" class="nav-pill-item" title="Wizja" aria-label="Wizja">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16"><path d="M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0z"/><path d="M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8zm8 3.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7z"/></svg>
          </a>
        </nav>

        <div class="header-date-controls">
          <div class="date-nav">
            <button class="btn btn-tertiary" id="prev-day-btn" aria-label="Poprzedni dzień">←</button>
            <input type="date" id="currentDate">
            <button class="btn btn-tertiary" id="next-day-btn" aria-label="Następny dzień">→</button>
          </div>
        </div>

        <div class="header-actions">
          <button class="btn btn-tertiary" id="show-chart-btn" aria-label="Wykres">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16"><path d="M11 2a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12h.5a.5.5 0 0 1 0 1H.5a.5.5 0 0 1 0-1H1v-3a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3h1V7a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7h1V2z"/></svg>
          </button>
          <button class="btn btn-tertiary" id="settings-btn" aria-label="Ustawienia">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><circle cx="12" cy="12" r="3"></circle><path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33A1.65 1.65 0 0 0 14 21.91V22a2 2 0 0 1-4 0v-.09a1.65 1.65 0 0 0-1-.51 1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 1 1-2.83-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82A1.65 1.65 0 0 0 2 12H2a2 2 0 0 1 0-4h.09a1.65 1.65 0 0 0 1-.51 1.65 1.65 0 0 0 .33-1.82l-.06-.06a2 2 0 1 1 2.83-2.83l.06.06a1.65 1.65 0 0 0 1.82.33A1.65 1.65 0 0 0 10 2.09V2a2 2 0 1 1 4 0v.09a1.65 1.65 0 0 0 1 .51 1.65 1.65 0 0 0 1.82-.33l.06.06a2 2 0 1 1 2.83 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82A1.65 1.65 0 0 0 22 10h.09A2 2 0 0 1 22 14h-.09a1.65 1.65 0 0 0-1 .51z"></path></svg>
          </button>
        </div>
      </header>
      
      <div class="tabs-container">
        <div class="tabs" role="tablist">
          <div class="tab active" data-section="poranek">🌅 Poranek</div>
          <div class="tab" data-section="wieczor">🌙 Wieczór</div>
        </div>
      </div>

      <div class="main-content">
        <section id="poranek-panel" class="section active"></section>
        <section id="wieczor-panel" class="section"></section>
      </div>

      <!-- Modale -->
      <div class="modal" id="settingsModal">
        <div class="content-card modal-content">
          <div class="modal-header">
            <h2 class="content-header modal-title">Ustawienia Wyglądu</h2>
            <button class="close-modal-btn" data-modal-id="settingsModal" aria-label="Zamknij">✖</button>
          </div>
          <div class="modal-body-content">
            <h4 style="margin-bottom:.75rem; color:var(--text-secondary);">Wybierz motyw</h4>
            <div class="theme-selector" id="themeSelectorContainer"></div>
          </div>
        </div>
      </div>

      <div class="modal" id="chartModal">
        <div class="content-card modal-content">
          <div class="modal-header">
            <h2 class="content-header modal-title">Analiza Postępów</h2>
            <button class="close-modal-btn" data-modal-id="chartModal" aria-label="Zamknij">✖</button>
          </div>
          <div class="modal-body-content">
            <div id="analiza-panel-content"></div>
          </div>
        </div>
      </div>

      <div id="notification"></div>
    </div>
  </div>
    
  <script>
    // Global
    let currentDate = null;

    // App
    const App = {
      isAppInitialized: false,

      init() {
        document.addEventListener('DOMContentLoaded', this.launch.bind(this));
      },

      launch() {
        if (typeof dateFns === 'undefined') {
          document.body.innerHTML = '<div style="padding:2rem; text-align:center;">Błąd ładowania bibliotek. Sprawdź połączenie z internetem i odśwież stronę.</div>';
          return;
        }
        if (this.isAppInitialized) return;
        this.isAppInitialized = true;

        if (!sessionStorage.getItem('dg_user')) {
          sessionStorage.setItem('dg_user', 'default_user');
        }
        UI.applyTheme(AppStorage.getSetting('theme') || document.documentElement.getAttribute('data-theme') || 'jasny');

        document.getElementById('dailyQuote').textContent =
          'Każdy dzień to nowa szansa na rozwój. Wykorzystaj ją.';

        this.bindEvents();

        UI.renderSection('poranek');
        UI.renderSection('wieczor');
        
        currentDate = dateFns.format(new Date(), 'yyyy-MM-dd');
        this.loadDate(currentDate);
      },

      bindEvents() {
        document.getElementById('settings-btn')?.addEventListener('click', () => UI.openSettingsModal());
        document.getElementById('stats-btn')?.addEventListener('click', () => {
          // Tutaj logika dla statystyk
          openModal('chartModal');
        });

        // data
        document.getElementById('prev-day-btn')?.addEventListener('click', () => this.changeDate(-1));
        document.getElementById('next-day-btn')?.addEventListener('click', () => this.changeDate(1));
        document.getElementById('currentDate')?.addEventListener('input', (e) => this.loadDate(e.target.value));

        // modale zamknięcia
        document.querySelectorAll('.modal').forEach(modal => {
          modal.addEventListener('click', (e) => {
            if (e.target.classList.contains('modal') || e.target.closest('.close-modal-btn')) {
              closeModal(modal.id);
            }
          });
        });
        
        // Zakładki
        document.querySelectorAll('.tab').forEach(tab => {
            tab.addEventListener('click', e => {
                document.querySelectorAll('.tab, .section').forEach(el => el.classList.remove('active'));
                const sectionId = e.currentTarget.dataset.section;
                e.currentTarget.classList.add('active');
                document.getElementById(`${sectionId}-panel`).classList.add('active');
            });
        });

        // Sync motywu między kartami
        window.addEventListener('storage', (event) => {
          if (event.key === AppStorage.userKey('settings')) {
            const theme = AppStorage.getSetting('theme') || 'jasny';
            UI.applyTheme(theme);
          }
        });
      },

      loadDate(newDate) {
        currentDate = newDate;
        const input = document.getElementById('currentDate');
        if (input) input.value = currentDate;
        UI.loadDailyData(currentDate);
      },

      changeDate(offset) {
        const newDate = dateFns.addDays(new Date(currentDate), offset);
        this.loadDate(dateFns.format(newDate, 'yyyy-MM-dd'));
      }
    };

    // Storage
    class AppStorage {
      static get(key) { try { return JSON.parse(localStorage.getItem(key)); } catch(e) { return null; } }
      static set(key, value) { try { localStorage.setItem(key, JSON.stringify(value)); } catch(e) { console.error('Błąd zapisu do localStorage', e);} }
      static userKey(prefix) { return `dziennik_${prefix}_${sessionStorage.getItem('dg_user')}`; }
      
      static getDayEntry(date) { return this.get(this.userKey(`entry_${date}`)) || {}; }
      static saveDayEntry(date, entry) { this.set(this.userKey(`entry_${date}`), entry); showNotification('Auto-zapisano ✅'); }

      static getSetting(key) {
        const s = this.get(this.userKey('settings'));
        return s ? s[key] : null;
      }
      static setSetting(key, value) {
        const s = this.get(this.userKey('settings')) || {};
        s[key] = value;
        this.set(this.userKey('settings'), s);
      }
    }

    // UI
    class UI {
      static renderSection(sectionId) {
        const container = document.getElementById(`${sectionId}-panel`);
        if (!container) return;
        
        const questions = {
            poranek: [
                { id: 'p1', text: 'Za co jestem dziś wdzięczny/a?' },
                { id: 'p2', text: 'Co sprawi, że ten dzień będzie wspaniały?' },
                { id: 'p3', text: 'Moja dzisiejsza afirmacja:' },
            ],
            wieczor: [
                { id: 'w1', text: '3 niesamowite rzeczy, które się dzisiaj wydarzyły:' },
                { id: 'w2', text: 'Czego się dzisiaj nauczyłem/am?' },
                { id: 'w3', text: 'Jak mogłem/am uczynić ten dzień jeszcze lepszym?' },
            ]
        };

        const title = sectionId === 'poranek' ? '🌅 Poranek' : '🌙 Wieczór';

        let html = `<div class="content-card"><h2 class="content-header">${title}</h2>`;
        questions[sectionId].forEach(q => {
            html += `<div class="form-group"><label for="q-${q.id}">${q.text}</label><textarea id="q-${q.id}" data-id="${q.id}" data-section="${sectionId}"></textarea></div>`;
        });
        html += `</div>`;
        container.innerHTML = html;

        container.querySelectorAll('textarea').forEach(textarea => {
          textarea.addEventListener('input', (e) => {
            const entry = AppStorage.getDayEntry(currentDate);
            const section = e.target.dataset.section;
            const qId = e.target.dataset.id;
            if (!entry[section]) entry[section] = {};
            entry[section][qId] = e.target.value;
            AppStorage.saveDayEntry(currentDate, entry);
          });
        });
      }

      static loadDailyData(date) {
        const entry = AppStorage.getDayEntry(date);
        ['poranek', 'wieczor'].forEach(sectionId => {
            const sectionData = entry[sectionId] || {};
            Object.keys(sectionData).forEach(qId => {
                const el = document.getElementById(`q-${qId}`);
                if (el) el.value = sectionData[qId];
            });
        });
      }

      static openSettingsModal() {
        const container = document.getElementById('themeSelectorContainer');
        const currentTheme = AppStorage.getSetting('theme') || 'jasny';
        const themes = [
          { id: 'jasny', name: 'Jasny', icon: '☀️' },
          { id: 'ciemny', name: 'Ciemny', icon: '🌑' },
          { id: 'fokus', name: 'Fokus', icon: '⚡' },
          { id: 'las',   name: 'Las',   icon: '🌱' },
          { id: 'ocean', name: 'Ocean', icon: '🌊' },
          { id: 'blask', name: 'Blask', icon: '✨' },
        ];
        container.innerHTML = themes.map(t =>
          `<div class="theme-option ${currentTheme === t.id ? 'is-active' : ''}" data-theme-id="${t.id}">
            <span>${t.icon}</span>${t.name}
          </div>`).join('');

        container.querySelectorAll('.theme-option').forEach(option => {
          option.addEventListener('click', (e) => {
            const themeId = e.currentTarget.dataset.themeId;
            UI.applyTheme(themeId);
            UI.openSettingsModal();
          });
        });

        openModal('settingsModal');
      }

      static applyTheme(themeName) {
        document.documentElement.dataset.theme = themeName;
        AppStorage.setSetting('theme', themeName);
        const meta = document.querySelector('meta[name="theme-color"]');
        if (meta) {
          const bgSecondary = getComputedStyle(document.documentElement).getPropertyValue('--bg-secondary').trim();
          meta.setAttribute('content', bgSecondary || '#FFFFFF');
        }
      }
    }

    // Pomocnicze
    function openModal(id) { document.getElementById(id)?.classList.add('active'); }
    function closeModal(id) { document.getElementById(id)?.classList.remove('active'); }

    let notificationTimeout;
    function showNotification(msg) {
      const el = document.getElementById('notification');
      if (!el) return;
      clearTimeout(notificationTimeout);
      el.textContent = msg;
      el.classList.add('active');
      notificationTimeout = setTimeout(() => el.classList.remove('active'), 2600);
    }

    // Start
    App.init();
  </script>
</body>
</html>
